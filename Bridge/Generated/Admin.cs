// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: meshtastic/admin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Meshtastic.Protobufs {

  /// <summary>Holder for reflection information generated from meshtastic/admin.proto</summary>
  public static partial class AdminReflection {

    #region Descriptor
    /// <summary>File descriptor for meshtastic/admin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdminReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtZXNodGFzdGljL2FkbWluLnByb3RvEgptZXNodGFzdGljGhhtZXNodGFz",
            "dGljL2NoYW5uZWwucHJvdG8aF21lc2h0YXN0aWMvY29uZmlnLnByb3RvGiJt",
            "ZXNodGFzdGljL2Nvbm5lY3Rpb25fc3RhdHVzLnByb3RvGhVtZXNodGFzdGlj",
            "L21lc2gucHJvdG8aHm1lc2h0YXN0aWMvbW9kdWxlX2NvbmZpZy5wcm90byLo",
            "EgoMQWRtaW5NZXNzYWdlEhcKD3Nlc3Npb25fcGFzc2tleRhlIAEoDBIdChNn",
            "ZXRfY2hhbm5lbF9yZXF1ZXN0GAEgASgNSAASMwoUZ2V0X2NoYW5uZWxfcmVz",
            "cG9uc2UYAiABKAsyEy5tZXNodGFzdGljLkNoYW5uZWxIABIbChFnZXRfb3du",
            "ZXJfcmVxdWVzdBgDIAEoCEgAEi4KEmdldF9vd25lcl9yZXNwb25zZRgEIAEo",
            "CzIQLm1lc2h0YXN0aWMuVXNlckgAEkEKEmdldF9jb25maWdfcmVxdWVzdBgF",
            "IAEoDjIjLm1lc2h0YXN0aWMuQWRtaW5NZXNzYWdlLkNvbmZpZ1R5cGVIABIx",
            "ChNnZXRfY29uZmlnX3Jlc3BvbnNlGAYgASgLMhIubWVzaHRhc3RpYy5Db25m",
            "aWdIABJOChlnZXRfbW9kdWxlX2NvbmZpZ19yZXF1ZXN0GAcgASgOMikubWVz",
            "aHRhc3RpYy5BZG1pbk1lc3NhZ2UuTW9kdWxlQ29uZmlnVHlwZUgAEj4KGmdl",
            "dF9tb2R1bGVfY29uZmlnX3Jlc3BvbnNlGAggASgLMhgubWVzaHRhc3RpYy5N",
            "b2R1bGVDb25maWdIABI0CipnZXRfY2FubmVkX21lc3NhZ2VfbW9kdWxlX21l",
            "c3NhZ2VzX3JlcXVlc3QYCiABKAhIABI1CitnZXRfY2FubmVkX21lc3NhZ2Vf",
            "bW9kdWxlX21lc3NhZ2VzX3Jlc3BvbnNlGAsgASgJSAASJQobZ2V0X2Rldmlj",
            "ZV9tZXRhZGF0YV9yZXF1ZXN0GAwgASgISAASQgocZ2V0X2RldmljZV9tZXRh",
            "ZGF0YV9yZXNwb25zZRgNIAEoCzIaLm1lc2h0YXN0aWMuRGV2aWNlTWV0YWRh",
            "dGFIABIeChRnZXRfcmluZ3RvbmVfcmVxdWVzdBgOIAEoCEgAEh8KFWdldF9y",
            "aW5ndG9uZV9yZXNwb25zZRgPIAEoCUgAEi4KJGdldF9kZXZpY2VfY29ubmVj",
            "dGlvbl9zdGF0dXNfcmVxdWVzdBgQIAEoCEgAElMKJWdldF9kZXZpY2VfY29u",
            "bmVjdGlvbl9zdGF0dXNfcmVzcG9uc2UYESABKAsyIi5tZXNodGFzdGljLkRl",
            "dmljZUNvbm5lY3Rpb25TdGF0dXNIABIxCgxzZXRfaGFtX21vZGUYEiABKAsy",
            "GS5tZXNodGFzdGljLkhhbVBhcmFtZXRlcnNIABIvCiVnZXRfbm9kZV9yZW1v",
            "dGVfaGFyZHdhcmVfcGluc19yZXF1ZXN0GBMgASgISAASXAomZ2V0X25vZGVf",
            "cmVtb3RlX2hhcmR3YXJlX3BpbnNfcmVzcG9uc2UYFCABKAsyKi5tZXNodGFz",
            "dGljLk5vZGVSZW1vdGVIYXJkd2FyZVBpbnNSZXNwb25zZUgAEiAKFmVudGVy",
            "X2RmdV9tb2RlX3JlcXVlc3QYFSABKAhIABIdChNkZWxldGVfZmlsZV9yZXF1",
            "ZXN0GBYgASgJSAASEwoJc2V0X3NjYWxlGBcgASgNSAASJQoJc2V0X293bmVy",
            "GCAgASgLMhAubWVzaHRhc3RpYy5Vc2VySAASKgoLc2V0X2NoYW5uZWwYISAB",
            "KAsyEy5tZXNodGFzdGljLkNoYW5uZWxIABIoCgpzZXRfY29uZmlnGCIgASgL",
            "MhIubWVzaHRhc3RpYy5Db25maWdIABI1ChFzZXRfbW9kdWxlX2NvbmZpZxgj",
            "IAEoCzIYLm1lc2h0YXN0aWMuTW9kdWxlQ29uZmlnSAASLAoic2V0X2Nhbm5l",
            "ZF9tZXNzYWdlX21vZHVsZV9tZXNzYWdlcxgkIAEoCUgAEh4KFHNldF9yaW5n",
            "dG9uZV9tZXNzYWdlGCUgASgJSAASGwoRcmVtb3ZlX2J5X25vZGVudW0YJiAB",
            "KA1IABIbChFzZXRfZmF2b3JpdGVfbm9kZRgnIAEoDUgAEh4KFHJlbW92ZV9m",
            "YXZvcml0ZV9ub2RlGCggASgNSAASMgoSc2V0X2ZpeGVkX3Bvc2l0aW9uGCkg",
            "ASgLMhQubWVzaHRhc3RpYy5Qb3NpdGlvbkgAEh8KFXJlbW92ZV9maXhlZF9w",
            "b3NpdGlvbhgqIAEoCEgAEhcKDXNldF90aW1lX29ubHkYKyABKAdIABIdChNi",
            "ZWdpbl9lZGl0X3NldHRpbmdzGEAgASgISAASHgoUY29tbWl0X2VkaXRfc2V0",
            "dGluZ3MYQSABKAhIABIeChRmYWN0b3J5X3Jlc2V0X2RldmljZRheIAEoBUgA",
            "EhwKEnJlYm9vdF9vdGFfc2Vjb25kcxhfIAEoBUgAEhgKDmV4aXRfc2ltdWxh",
            "dG9yGGAgASgISAASGAoOcmVib290X3NlY29uZHMYYSABKAVIABIaChBzaHV0",
            "ZG93bl9zZWNvbmRzGGIgASgFSAASHgoUZmFjdG9yeV9yZXNldF9jb25maWcY",
            "YyABKAVIABIWCgxub2RlZGJfcmVzZXQYZCABKAVIACLBAQoKQ29uZmlnVHlw",
            "ZRIRCg1ERVZJQ0VfQ09ORklHEAASEwoPUE9TSVRJT05fQ09ORklHEAESEAoM",
            "UE9XRVJfQ09ORklHEAISEgoOTkVUV09SS19DT05GSUcQAxISCg5ESVNQTEFZ",
            "X0NPTkZJRxAEEg8KC0xPUkFfQ09ORklHEAUSFAoQQkxVRVRPT1RIX0NPTkZJ",
            "RxAGEhMKD1NFQ1VSSVRZX0NPTkZJRxAHEhUKEVNFU1NJT05LRVlfQ09ORklH",
            "EAgiuwIKEE1vZHVsZUNvbmZpZ1R5cGUSDwoLTVFUVF9DT05GSUcQABIRCg1T",
            "RVJJQUxfQ09ORklHEAESEwoPRVhUTk9USUZfQ09ORklHEAISFwoTU1RPUkVG",
            "T1JXQVJEX0NPTkZJRxADEhQKEFJBTkdFVEVTVF9DT05GSUcQBBIUChBURUxF",
            "TUVUUllfQ09ORklHEAUSFAoQQ0FOTkVETVNHX0NPTkZJRxAGEhAKDEFVRElP",
            "X0NPTkZJRxAHEhkKFVJFTU9URUhBUkRXQVJFX0NPTkZJRxAIEhcKE05FSUdI",
            "Qk9SSU5GT19DT05GSUcQCRIaChZBTUJJRU5UTElHSFRJTkdfQ09ORklHEAoS",
            "GgoWREVURUNUSU9OU0VOU09SX0NPTkZJRxALEhUKEVBBWENPVU5URVJfQ09O",
            "RklHEAxCEQoPcGF5bG9hZF92YXJpYW50IlsKDUhhbVBhcmFtZXRlcnMSEQoJ",
            "Y2FsbF9zaWduGAEgASgJEhAKCHR4X3Bvd2VyGAIgASgFEhEKCWZyZXF1ZW5j",
            "eRgDIAEoAhISCgpzaG9ydF9uYW1lGAQgASgJImYKHk5vZGVSZW1vdGVIYXJk",
            "d2FyZVBpbnNSZXNwb25zZRJEChlub2RlX3JlbW90ZV9oYXJkd2FyZV9waW5z",
            "GAEgAygLMiEubWVzaHRhc3RpYy5Ob2RlUmVtb3RlSGFyZHdhcmVQaW5CYAoT",
            "Y29tLmdlZWtzdmlsbGUubWVzaEILQWRtaW5Qcm90b3NaImdpdGh1Yi5jb20v",
            "bWVzaHRhc3RpYy9nby9nZW5lcmF0ZWSqAhRNZXNodGFzdGljLlByb3RvYnVm",
            "c7oCAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Meshtastic.Protobufs.ChannelReflection.Descriptor, global::Meshtastic.Protobufs.ConfigReflection.Descriptor, global::Meshtastic.Protobufs.ConnectionStatusReflection.Descriptor, global::Meshtastic.Protobufs.MeshReflection.Descriptor, global::Meshtastic.Protobufs.ModuleConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.AdminMessage), global::Meshtastic.Protobufs.AdminMessage.Parser, new[]{ "SessionPasskey", "GetChannelRequest", "GetChannelResponse", "GetOwnerRequest", "GetOwnerResponse", "GetConfigRequest", "GetConfigResponse", "GetModuleConfigRequest", "GetModuleConfigResponse", "GetCannedMessageModuleMessagesRequest", "GetCannedMessageModuleMessagesResponse", "GetDeviceMetadataRequest", "GetDeviceMetadataResponse", "GetRingtoneRequest", "GetRingtoneResponse", "GetDeviceConnectionStatusRequest", "GetDeviceConnectionStatusResponse", "SetHamMode", "GetNodeRemoteHardwarePinsRequest", "GetNodeRemoteHardwarePinsResponse", "EnterDfuModeRequest", "DeleteFileRequest", "SetScale", "SetOwner", "SetChannel", "SetConfig", "SetModuleConfig", "SetCannedMessageModuleMessages", "SetRingtoneMessage", "RemoveByNodenum", "SetFavoriteNode", "RemoveFavoriteNode", "SetFixedPosition", "RemoveFixedPosition", "SetTimeOnly", "BeginEditSettings", "CommitEditSettings", "FactoryResetDevice", "RebootOtaSeconds", "ExitSimulator", "RebootSeconds", "ShutdownSeconds", "FactoryResetConfig", "NodedbReset" }, new[]{ "PayloadVariant" }, new[]{ typeof(global::Meshtastic.Protobufs.AdminMessage.Types.ConfigType), typeof(global::Meshtastic.Protobufs.AdminMessage.Types.ModuleConfigType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.HamParameters), global::Meshtastic.Protobufs.HamParameters.Parser, new[]{ "CallSign", "TxPower", "Frequency", "ShortName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse), global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse.Parser, new[]{ "NodeRemoteHardwarePins" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// This message is handled by the Admin module and is responsible for all settings/channel read/write operations.
  /// This message is used to do settings operations to both remote AND local nodes.
  /// (Prior to 1.2 these operations were done via special ToRadio operations)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AdminMessage : pb::IMessage<AdminMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdminMessage> _parser = new pb::MessageParser<AdminMessage>(() => new AdminMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AdminMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.AdminReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminMessage(AdminMessage other) : this() {
      sessionPasskey_ = other.sessionPasskey_;
      switch (other.PayloadVariantCase) {
        case PayloadVariantOneofCase.GetChannelRequest:
          GetChannelRequest = other.GetChannelRequest;
          break;
        case PayloadVariantOneofCase.GetChannelResponse:
          GetChannelResponse = other.GetChannelResponse.Clone();
          break;
        case PayloadVariantOneofCase.GetOwnerRequest:
          GetOwnerRequest = other.GetOwnerRequest;
          break;
        case PayloadVariantOneofCase.GetOwnerResponse:
          GetOwnerResponse = other.GetOwnerResponse.Clone();
          break;
        case PayloadVariantOneofCase.GetConfigRequest:
          GetConfigRequest = other.GetConfigRequest;
          break;
        case PayloadVariantOneofCase.GetConfigResponse:
          GetConfigResponse = other.GetConfigResponse.Clone();
          break;
        case PayloadVariantOneofCase.GetModuleConfigRequest:
          GetModuleConfigRequest = other.GetModuleConfigRequest;
          break;
        case PayloadVariantOneofCase.GetModuleConfigResponse:
          GetModuleConfigResponse = other.GetModuleConfigResponse.Clone();
          break;
        case PayloadVariantOneofCase.GetCannedMessageModuleMessagesRequest:
          GetCannedMessageModuleMessagesRequest = other.GetCannedMessageModuleMessagesRequest;
          break;
        case PayloadVariantOneofCase.GetCannedMessageModuleMessagesResponse:
          GetCannedMessageModuleMessagesResponse = other.GetCannedMessageModuleMessagesResponse;
          break;
        case PayloadVariantOneofCase.GetDeviceMetadataRequest:
          GetDeviceMetadataRequest = other.GetDeviceMetadataRequest;
          break;
        case PayloadVariantOneofCase.GetDeviceMetadataResponse:
          GetDeviceMetadataResponse = other.GetDeviceMetadataResponse.Clone();
          break;
        case PayloadVariantOneofCase.GetRingtoneRequest:
          GetRingtoneRequest = other.GetRingtoneRequest;
          break;
        case PayloadVariantOneofCase.GetRingtoneResponse:
          GetRingtoneResponse = other.GetRingtoneResponse;
          break;
        case PayloadVariantOneofCase.GetDeviceConnectionStatusRequest:
          GetDeviceConnectionStatusRequest = other.GetDeviceConnectionStatusRequest;
          break;
        case PayloadVariantOneofCase.GetDeviceConnectionStatusResponse:
          GetDeviceConnectionStatusResponse = other.GetDeviceConnectionStatusResponse.Clone();
          break;
        case PayloadVariantOneofCase.SetHamMode:
          SetHamMode = other.SetHamMode.Clone();
          break;
        case PayloadVariantOneofCase.GetNodeRemoteHardwarePinsRequest:
          GetNodeRemoteHardwarePinsRequest = other.GetNodeRemoteHardwarePinsRequest;
          break;
        case PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse:
          GetNodeRemoteHardwarePinsResponse = other.GetNodeRemoteHardwarePinsResponse.Clone();
          break;
        case PayloadVariantOneofCase.EnterDfuModeRequest:
          EnterDfuModeRequest = other.EnterDfuModeRequest;
          break;
        case PayloadVariantOneofCase.DeleteFileRequest:
          DeleteFileRequest = other.DeleteFileRequest;
          break;
        case PayloadVariantOneofCase.SetScale:
          SetScale = other.SetScale;
          break;
        case PayloadVariantOneofCase.SetOwner:
          SetOwner = other.SetOwner.Clone();
          break;
        case PayloadVariantOneofCase.SetChannel:
          SetChannel = other.SetChannel.Clone();
          break;
        case PayloadVariantOneofCase.SetConfig:
          SetConfig = other.SetConfig.Clone();
          break;
        case PayloadVariantOneofCase.SetModuleConfig:
          SetModuleConfig = other.SetModuleConfig.Clone();
          break;
        case PayloadVariantOneofCase.SetCannedMessageModuleMessages:
          SetCannedMessageModuleMessages = other.SetCannedMessageModuleMessages;
          break;
        case PayloadVariantOneofCase.SetRingtoneMessage:
          SetRingtoneMessage = other.SetRingtoneMessage;
          break;
        case PayloadVariantOneofCase.RemoveByNodenum:
          RemoveByNodenum = other.RemoveByNodenum;
          break;
        case PayloadVariantOneofCase.SetFavoriteNode:
          SetFavoriteNode = other.SetFavoriteNode;
          break;
        case PayloadVariantOneofCase.RemoveFavoriteNode:
          RemoveFavoriteNode = other.RemoveFavoriteNode;
          break;
        case PayloadVariantOneofCase.SetFixedPosition:
          SetFixedPosition = other.SetFixedPosition.Clone();
          break;
        case PayloadVariantOneofCase.RemoveFixedPosition:
          RemoveFixedPosition = other.RemoveFixedPosition;
          break;
        case PayloadVariantOneofCase.SetTimeOnly:
          SetTimeOnly = other.SetTimeOnly;
          break;
        case PayloadVariantOneofCase.BeginEditSettings:
          BeginEditSettings = other.BeginEditSettings;
          break;
        case PayloadVariantOneofCase.CommitEditSettings:
          CommitEditSettings = other.CommitEditSettings;
          break;
        case PayloadVariantOneofCase.FactoryResetDevice:
          FactoryResetDevice = other.FactoryResetDevice;
          break;
        case PayloadVariantOneofCase.RebootOtaSeconds:
          RebootOtaSeconds = other.RebootOtaSeconds;
          break;
        case PayloadVariantOneofCase.ExitSimulator:
          ExitSimulator = other.ExitSimulator;
          break;
        case PayloadVariantOneofCase.RebootSeconds:
          RebootSeconds = other.RebootSeconds;
          break;
        case PayloadVariantOneofCase.ShutdownSeconds:
          ShutdownSeconds = other.ShutdownSeconds;
          break;
        case PayloadVariantOneofCase.FactoryResetConfig:
          FactoryResetConfig = other.FactoryResetConfig;
          break;
        case PayloadVariantOneofCase.NodedbReset:
          NodedbReset = other.NodedbReset;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminMessage Clone() {
      return new AdminMessage(this);
    }

    /// <summary>Field number for the "session_passkey" field.</summary>
    public const int SessionPasskeyFieldNumber = 101;
    private pb::ByteString sessionPasskey_ = pb::ByteString.Empty;
    /// <summary>
    ///
    /// The node generates this key and sends it with any get_x_response packets.
    /// The client MUST include the same key with any set_x commands. Key expires after 300 seconds.
    /// Prevents replay attacks for admin messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SessionPasskey {
      get { return sessionPasskey_; }
      set {
        sessionPasskey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "get_channel_request" field.</summary>
    public const int GetChannelRequestFieldNumber = 1;
    /// <summary>
    ///
    /// Send the specified channel in the response to this message
    /// NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GetChannelRequest {
      get { return HasGetChannelRequest ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetChannelRequest;
      }
    }
    /// <summary>Gets whether the "get_channel_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetChannelRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetChannelRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_channel_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetChannelRequest() {
      if (HasGetChannelRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_channel_response" field.</summary>
    public const int GetChannelResponseFieldNumber = 2;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Channel GetChannelResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse ? (global::Meshtastic.Protobufs.Channel) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetChannelResponse;
      }
    }

    /// <summary>Field number for the "get_owner_request" field.</summary>
    public const int GetOwnerRequestFieldNumber = 3;
    /// <summary>
    ///
    /// Send the current owner data in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetOwnerRequest {
      get { return HasGetOwnerRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetOwnerRequest;
      }
    }
    /// <summary>Gets whether the "get_owner_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetOwnerRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_owner_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetOwnerRequest() {
      if (HasGetOwnerRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_owner_response" field.</summary>
    public const int GetOwnerResponseFieldNumber = 4;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.User GetOwnerResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse ? (global::Meshtastic.Protobufs.User) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetOwnerResponse;
      }
    }

    /// <summary>Field number for the "get_config_request" field.</summary>
    public const int GetConfigRequestFieldNumber = 5;
    /// <summary>
    ///
    /// Ask for the following config data to be sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.AdminMessage.Types.ConfigType GetConfigRequest {
      get { return HasGetConfigRequest ? (global::Meshtastic.Protobufs.AdminMessage.Types.ConfigType) payloadVariant_ : global::Meshtastic.Protobufs.AdminMessage.Types.ConfigType.DeviceConfig; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetConfigRequest;
      }
    }
    /// <summary>Gets whether the "get_config_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetConfigRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetConfigRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_config_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetConfigRequest() {
      if (HasGetConfigRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_config_response" field.</summary>
    public const int GetConfigResponseFieldNumber = 6;
    /// <summary>
    ///
    /// Send the current Config in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Config GetConfigResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse ? (global::Meshtastic.Protobufs.Config) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetConfigResponse;
      }
    }

    /// <summary>Field number for the "get_module_config_request" field.</summary>
    public const int GetModuleConfigRequestFieldNumber = 7;
    /// <summary>
    ///
    /// Ask for the following config data to be sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.AdminMessage.Types.ModuleConfigType GetModuleConfigRequest {
      get { return HasGetModuleConfigRequest ? (global::Meshtastic.Protobufs.AdminMessage.Types.ModuleConfigType) payloadVariant_ : global::Meshtastic.Protobufs.AdminMessage.Types.ModuleConfigType.MqttConfig; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetModuleConfigRequest;
      }
    }
    /// <summary>Gets whether the "get_module_config_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetModuleConfigRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_module_config_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetModuleConfigRequest() {
      if (HasGetModuleConfigRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_module_config_response" field.</summary>
    public const int GetModuleConfigResponseFieldNumber = 8;
    /// <summary>
    ///
    /// Send the current Config in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig GetModuleConfigResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse ? (global::Meshtastic.Protobufs.ModuleConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetModuleConfigResponse;
      }
    }

    /// <summary>Field number for the "get_canned_message_module_messages_request" field.</summary>
    public const int GetCannedMessageModuleMessagesRequestFieldNumber = 10;
    /// <summary>
    ///
    /// Get the Canned Message Module messages in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetCannedMessageModuleMessagesRequest {
      get { return HasGetCannedMessageModuleMessagesRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetCannedMessageModuleMessagesRequest;
      }
    }
    /// <summary>Gets whether the "get_canned_message_module_messages_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetCannedMessageModuleMessagesRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetCannedMessageModuleMessagesRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_canned_message_module_messages_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetCannedMessageModuleMessagesRequest() {
      if (HasGetCannedMessageModuleMessagesRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_canned_message_module_messages_response" field.</summary>
    public const int GetCannedMessageModuleMessagesResponseFieldNumber = 11;
    /// <summary>
    ///
    /// Get the Canned Message Module messages in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GetCannedMessageModuleMessagesResponse {
      get { return HasGetCannedMessageModuleMessagesResponse ? (string) payloadVariant_ : ""; }
      set {
        payloadVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadVariantCase_ = PayloadVariantOneofCase.GetCannedMessageModuleMessagesResponse;
      }
    }
    /// <summary>Gets whether the "get_canned_message_module_messages_response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetCannedMessageModuleMessagesResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetCannedMessageModuleMessagesResponse; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_canned_message_module_messages_response" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetCannedMessageModuleMessagesResponse() {
      if (HasGetCannedMessageModuleMessagesResponse) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_device_metadata_request" field.</summary>
    public const int GetDeviceMetadataRequestFieldNumber = 12;
    /// <summary>
    ///
    /// Request the node to send device metadata (firmware, protobuf version, etc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetDeviceMetadataRequest {
      get { return HasGetDeviceMetadataRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetDeviceMetadataRequest;
      }
    }
    /// <summary>Gets whether the "get_device_metadata_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetDeviceMetadataRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_device_metadata_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetDeviceMetadataRequest() {
      if (HasGetDeviceMetadataRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_device_metadata_response" field.</summary>
    public const int GetDeviceMetadataResponseFieldNumber = 13;
    /// <summary>
    ///
    /// Device metadata response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.DeviceMetadata GetDeviceMetadataResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse ? (global::Meshtastic.Protobufs.DeviceMetadata) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetDeviceMetadataResponse;
      }
    }

    /// <summary>Field number for the "get_ringtone_request" field.</summary>
    public const int GetRingtoneRequestFieldNumber = 14;
    /// <summary>
    ///
    /// Get the Ringtone in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetRingtoneRequest {
      get { return HasGetRingtoneRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetRingtoneRequest;
      }
    }
    /// <summary>Gets whether the "get_ringtone_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetRingtoneRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetRingtoneRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_ringtone_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetRingtoneRequest() {
      if (HasGetRingtoneRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_ringtone_response" field.</summary>
    public const int GetRingtoneResponseFieldNumber = 15;
    /// <summary>
    ///
    /// Get the Ringtone in the response to this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GetRingtoneResponse {
      get { return HasGetRingtoneResponse ? (string) payloadVariant_ : ""; }
      set {
        payloadVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadVariantCase_ = PayloadVariantOneofCase.GetRingtoneResponse;
      }
    }
    /// <summary>Gets whether the "get_ringtone_response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetRingtoneResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetRingtoneResponse; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_ringtone_response" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetRingtoneResponse() {
      if (HasGetRingtoneResponse) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_device_connection_status_request" field.</summary>
    public const int GetDeviceConnectionStatusRequestFieldNumber = 16;
    /// <summary>
    ///
    /// Request the node to send it's connection status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetDeviceConnectionStatusRequest {
      get { return HasGetDeviceConnectionStatusRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetDeviceConnectionStatusRequest;
      }
    }
    /// <summary>Gets whether the "get_device_connection_status_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetDeviceConnectionStatusRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_device_connection_status_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetDeviceConnectionStatusRequest() {
      if (HasGetDeviceConnectionStatusRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_device_connection_status_response" field.</summary>
    public const int GetDeviceConnectionStatusResponseFieldNumber = 17;
    /// <summary>
    ///
    /// Device connection status response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.DeviceConnectionStatus GetDeviceConnectionStatusResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse ? (global::Meshtastic.Protobufs.DeviceConnectionStatus) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetDeviceConnectionStatusResponse;
      }
    }

    /// <summary>Field number for the "set_ham_mode" field.</summary>
    public const int SetHamModeFieldNumber = 18;
    /// <summary>
    ///
    /// Setup a node for licensed amateur (ham) radio operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.HamParameters SetHamMode {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode ? (global::Meshtastic.Protobufs.HamParameters) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetHamMode;
      }
    }

    /// <summary>Field number for the "get_node_remote_hardware_pins_request" field.</summary>
    public const int GetNodeRemoteHardwarePinsRequestFieldNumber = 19;
    /// <summary>
    ///
    /// Get the mesh's nodes with their available gpio pins for RemoteHardware module use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetNodeRemoteHardwarePinsRequest {
      get { return HasGetNodeRemoteHardwarePinsRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.GetNodeRemoteHardwarePinsRequest;
      }
    }
    /// <summary>Gets whether the "get_node_remote_hardware_pins_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetNodeRemoteHardwarePinsRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "get_node_remote_hardware_pins_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetNodeRemoteHardwarePinsRequest() {
      if (HasGetNodeRemoteHardwarePinsRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "get_node_remote_hardware_pins_response" field.</summary>
    public const int GetNodeRemoteHardwarePinsResponseFieldNumber = 20;
    /// <summary>
    ///
    /// Respond with the mesh's nodes with their available gpio pins for RemoteHardware module use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse GetNodeRemoteHardwarePinsResponse {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse ? (global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse;
      }
    }

    /// <summary>Field number for the "enter_dfu_mode_request" field.</summary>
    public const int EnterDfuModeRequestFieldNumber = 21;
    /// <summary>
    ///
    /// Enter (UF2) DFU mode
    /// Only implemented on NRF52 currently
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnterDfuModeRequest {
      get { return HasEnterDfuModeRequest ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.EnterDfuModeRequest;
      }
    }
    /// <summary>Gets whether the "enter_dfu_mode_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnterDfuModeRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.EnterDfuModeRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enter_dfu_mode_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnterDfuModeRequest() {
      if (HasEnterDfuModeRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "delete_file_request" field.</summary>
    public const int DeleteFileRequestFieldNumber = 22;
    /// <summary>
    ///
    /// Delete the file by the specified path from the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeleteFileRequest {
      get { return HasDeleteFileRequest ? (string) payloadVariant_ : ""; }
      set {
        payloadVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadVariantCase_ = PayloadVariantOneofCase.DeleteFileRequest;
      }
    }
    /// <summary>Gets whether the "delete_file_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeleteFileRequest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.DeleteFileRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "delete_file_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeleteFileRequest() {
      if (HasDeleteFileRequest) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_scale" field.</summary>
    public const int SetScaleFieldNumber = 23;
    /// <summary>
    ///
    /// Set zero and offset for scale chips
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SetScale {
      get { return HasSetScale ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.SetScale;
      }
    }
    /// <summary>Gets whether the "set_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSetScale {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetScale; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "set_scale" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSetScale() {
      if (HasSetScale) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_owner" field.</summary>
    public const int SetOwnerFieldNumber = 32;
    /// <summary>
    ///
    /// Set the owner for this node
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.User SetOwner {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetOwner ? (global::Meshtastic.Protobufs.User) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetOwner;
      }
    }

    /// <summary>Field number for the "set_channel" field.</summary>
    public const int SetChannelFieldNumber = 33;
    /// <summary>
    ///
    /// Set channels (using the new API).
    /// A special channel is the "primary channel".
    /// The other records are secondary channels.
    /// Note: only one channel can be marked as primary.
    /// If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Channel SetChannel {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetChannel ? (global::Meshtastic.Protobufs.Channel) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetChannel;
      }
    }

    /// <summary>Field number for the "set_config" field.</summary>
    public const int SetConfigFieldNumber = 34;
    /// <summary>
    ///
    /// Set the current Config
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Config SetConfig {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetConfig ? (global::Meshtastic.Protobufs.Config) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetConfig;
      }
    }

    /// <summary>Field number for the "set_module_config" field.</summary>
    public const int SetModuleConfigFieldNumber = 35;
    /// <summary>
    ///
    /// Set the current Config
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig SetModuleConfig {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig ? (global::Meshtastic.Protobufs.ModuleConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetModuleConfig;
      }
    }

    /// <summary>Field number for the "set_canned_message_module_messages" field.</summary>
    public const int SetCannedMessageModuleMessagesFieldNumber = 36;
    /// <summary>
    ///
    /// Set the Canned Message Module messages text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SetCannedMessageModuleMessages {
      get { return HasSetCannedMessageModuleMessages ? (string) payloadVariant_ : ""; }
      set {
        payloadVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadVariantCase_ = PayloadVariantOneofCase.SetCannedMessageModuleMessages;
      }
    }
    /// <summary>Gets whether the "set_canned_message_module_messages" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSetCannedMessageModuleMessages {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetCannedMessageModuleMessages; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "set_canned_message_module_messages" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSetCannedMessageModuleMessages() {
      if (HasSetCannedMessageModuleMessages) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_ringtone_message" field.</summary>
    public const int SetRingtoneMessageFieldNumber = 37;
    /// <summary>
    ///
    /// Set the ringtone for ExternalNotification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SetRingtoneMessage {
      get { return HasSetRingtoneMessage ? (string) payloadVariant_ : ""; }
      set {
        payloadVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadVariantCase_ = PayloadVariantOneofCase.SetRingtoneMessage;
      }
    }
    /// <summary>Gets whether the "set_ringtone_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSetRingtoneMessage {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetRingtoneMessage; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "set_ringtone_message" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSetRingtoneMessage() {
      if (HasSetRingtoneMessage) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "remove_by_nodenum" field.</summary>
    public const int RemoveByNodenumFieldNumber = 38;
    /// <summary>
    ///
    /// Remove the node by the specified node-num from the NodeDB on the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RemoveByNodenum {
      get { return HasRemoveByNodenum ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.RemoveByNodenum;
      }
    }
    /// <summary>Gets whether the "remove_by_nodenum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoveByNodenum {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RemoveByNodenum; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "remove_by_nodenum" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoveByNodenum() {
      if (HasRemoveByNodenum) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_favorite_node" field.</summary>
    public const int SetFavoriteNodeFieldNumber = 39;
    /// <summary>
    ///
    /// Set specified node-num to be favorited on the NodeDB on the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SetFavoriteNode {
      get { return HasSetFavoriteNode ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.SetFavoriteNode;
      }
    }
    /// <summary>Gets whether the "set_favorite_node" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSetFavoriteNode {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetFavoriteNode; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "set_favorite_node" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSetFavoriteNode() {
      if (HasSetFavoriteNode) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "remove_favorite_node" field.</summary>
    public const int RemoveFavoriteNodeFieldNumber = 40;
    /// <summary>
    ///
    /// Set specified node-num to be un-favorited on the NodeDB on the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RemoveFavoriteNode {
      get { return HasRemoveFavoriteNode ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.RemoveFavoriteNode;
      }
    }
    /// <summary>Gets whether the "remove_favorite_node" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoveFavoriteNode {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RemoveFavoriteNode; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "remove_favorite_node" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoveFavoriteNode() {
      if (HasRemoveFavoriteNode) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_fixed_position" field.</summary>
    public const int SetFixedPositionFieldNumber = 41;
    /// <summary>
    ///
    /// Set fixed position data on the node and then set the position.fixed_position = true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Position SetFixedPosition {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition ? (global::Meshtastic.Protobufs.Position) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.SetFixedPosition;
      }
    }

    /// <summary>Field number for the "remove_fixed_position" field.</summary>
    public const int RemoveFixedPositionFieldNumber = 42;
    /// <summary>
    ///
    /// Clear fixed position coordinates and then set position.fixed_position = false
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RemoveFixedPosition {
      get { return HasRemoveFixedPosition ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.RemoveFixedPosition;
      }
    }
    /// <summary>Gets whether the "remove_fixed_position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoveFixedPosition {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RemoveFixedPosition; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "remove_fixed_position" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoveFixedPosition() {
      if (HasRemoveFixedPosition) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "set_time_only" field.</summary>
    public const int SetTimeOnlyFieldNumber = 43;
    /// <summary>
    ///
    /// Set time only on the node
    /// Convenience method to set the time on the node (as Net quality) without any other position data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SetTimeOnly {
      get { return HasSetTimeOnly ? (uint) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.SetTimeOnly;
      }
    }
    /// <summary>Gets whether the "set_time_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSetTimeOnly {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.SetTimeOnly; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "set_time_only" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSetTimeOnly() {
      if (HasSetTimeOnly) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "begin_edit_settings" field.</summary>
    public const int BeginEditSettingsFieldNumber = 64;
    /// <summary>
    ///
    /// Begins an edit transaction for config, module config, owner, and channel settings changes
    /// This will delay the standard *implicit* save to the file system and subsequent reboot behavior until committed (commit_edit_settings)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BeginEditSettings {
      get { return HasBeginEditSettings ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.BeginEditSettings;
      }
    }
    /// <summary>Gets whether the "begin_edit_settings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeginEditSettings {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.BeginEditSettings; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "begin_edit_settings" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeginEditSettings() {
      if (HasBeginEditSettings) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "commit_edit_settings" field.</summary>
    public const int CommitEditSettingsFieldNumber = 65;
    /// <summary>
    ///
    /// Commits an open transaction for any edits made to config, module config, owner, and channel settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CommitEditSettings {
      get { return HasCommitEditSettings ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.CommitEditSettings;
      }
    }
    /// <summary>Gets whether the "commit_edit_settings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommitEditSettings {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.CommitEditSettings; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "commit_edit_settings" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommitEditSettings() {
      if (HasCommitEditSettings) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "factory_reset_device" field.</summary>
    public const int FactoryResetDeviceFieldNumber = 94;
    /// <summary>
    ///
    /// Tell the node to factory reset config everything; all device state and configuration will be returned to factory defaults and BLE bonds will be cleared.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FactoryResetDevice {
      get { return HasFactoryResetDevice ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.FactoryResetDevice;
      }
    }
    /// <summary>Gets whether the "factory_reset_device" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFactoryResetDevice {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.FactoryResetDevice; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "factory_reset_device" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFactoryResetDevice() {
      if (HasFactoryResetDevice) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "reboot_ota_seconds" field.</summary>
    public const int RebootOtaSecondsFieldNumber = 95;
    /// <summary>
    ///
    /// Tell the node to reboot into the OTA Firmware in this many seconds (or &lt;0 to cancel reboot)
    /// Only Implemented for ESP32 Devices. This needs to be issued to send a new main firmware via bluetooth.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebootOtaSeconds {
      get { return HasRebootOtaSeconds ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.RebootOtaSeconds;
      }
    }
    /// <summary>Gets whether the "reboot_ota_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebootOtaSeconds {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RebootOtaSeconds; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "reboot_ota_seconds" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebootOtaSeconds() {
      if (HasRebootOtaSeconds) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "exit_simulator" field.</summary>
    public const int ExitSimulatorFieldNumber = 96;
    /// <summary>
    ///
    /// This message is only supported for the simulator Portduino build.
    /// If received the simulator will exit successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExitSimulator {
      get { return HasExitSimulator ? (bool) payloadVariant_ : false; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.ExitSimulator;
      }
    }
    /// <summary>Gets whether the "exit_simulator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExitSimulator {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.ExitSimulator; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "exit_simulator" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExitSimulator() {
      if (HasExitSimulator) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "reboot_seconds" field.</summary>
    public const int RebootSecondsFieldNumber = 97;
    /// <summary>
    ///
    /// Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebootSeconds {
      get { return HasRebootSeconds ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.RebootSeconds;
      }
    }
    /// <summary>Gets whether the "reboot_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebootSeconds {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RebootSeconds; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "reboot_seconds" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebootSeconds() {
      if (HasRebootSeconds) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "shutdown_seconds" field.</summary>
    public const int ShutdownSecondsFieldNumber = 98;
    /// <summary>
    ///
    /// Tell the node to shutdown in this many seconds (or &lt;0 to cancel shutdown)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShutdownSeconds {
      get { return HasShutdownSeconds ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.ShutdownSeconds;
      }
    }
    /// <summary>Gets whether the "shutdown_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShutdownSeconds {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.ShutdownSeconds; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "shutdown_seconds" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShutdownSeconds() {
      if (HasShutdownSeconds) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "factory_reset_config" field.</summary>
    public const int FactoryResetConfigFieldNumber = 99;
    /// <summary>
    ///
    /// Tell the node to factory reset config; all device state and configuration will be returned to factory defaults; BLE bonds will be preserved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FactoryResetConfig {
      get { return HasFactoryResetConfig ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.FactoryResetConfig;
      }
    }
    /// <summary>Gets whether the "factory_reset_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFactoryResetConfig {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.FactoryResetConfig; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "factory_reset_config" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFactoryResetConfig() {
      if (HasFactoryResetConfig) {
        ClearPayloadVariant();
      }
    }

    /// <summary>Field number for the "nodedb_reset" field.</summary>
    public const int NodedbResetFieldNumber = 100;
    /// <summary>
    ///
    /// Tell the node to reset the nodedb.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodedbReset {
      get { return HasNodedbReset ? (int) payloadVariant_ : 0; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = PayloadVariantOneofCase.NodedbReset;
      }
    }
    /// <summary>Gets whether the "nodedb_reset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNodedbReset {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.NodedbReset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "nodedb_reset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNodedbReset() {
      if (HasNodedbReset) {
        ClearPayloadVariant();
      }
    }

    private object payloadVariant_;
    /// <summary>Enum of possible cases for the "payload_variant" oneof.</summary>
    public enum PayloadVariantOneofCase {
      None = 0,
      GetChannelRequest = 1,
      GetChannelResponse = 2,
      GetOwnerRequest = 3,
      GetOwnerResponse = 4,
      GetConfigRequest = 5,
      GetConfigResponse = 6,
      GetModuleConfigRequest = 7,
      GetModuleConfigResponse = 8,
      GetCannedMessageModuleMessagesRequest = 10,
      GetCannedMessageModuleMessagesResponse = 11,
      GetDeviceMetadataRequest = 12,
      GetDeviceMetadataResponse = 13,
      GetRingtoneRequest = 14,
      GetRingtoneResponse = 15,
      GetDeviceConnectionStatusRequest = 16,
      GetDeviceConnectionStatusResponse = 17,
      SetHamMode = 18,
      GetNodeRemoteHardwarePinsRequest = 19,
      GetNodeRemoteHardwarePinsResponse = 20,
      EnterDfuModeRequest = 21,
      DeleteFileRequest = 22,
      SetScale = 23,
      SetOwner = 32,
      SetChannel = 33,
      SetConfig = 34,
      SetModuleConfig = 35,
      SetCannedMessageModuleMessages = 36,
      SetRingtoneMessage = 37,
      RemoveByNodenum = 38,
      SetFavoriteNode = 39,
      RemoveFavoriteNode = 40,
      SetFixedPosition = 41,
      RemoveFixedPosition = 42,
      SetTimeOnly = 43,
      BeginEditSettings = 64,
      CommitEditSettings = 65,
      FactoryResetDevice = 94,
      RebootOtaSeconds = 95,
      ExitSimulator = 96,
      RebootSeconds = 97,
      ShutdownSeconds = 98,
      FactoryResetConfig = 99,
      NodedbReset = 100,
    }
    private PayloadVariantOneofCase payloadVariantCase_ = PayloadVariantOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadVariantOneofCase PayloadVariantCase {
      get { return payloadVariantCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadVariant() {
      payloadVariantCase_ = PayloadVariantOneofCase.None;
      payloadVariant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AdminMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AdminMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionPasskey != other.SessionPasskey) return false;
      if (GetChannelRequest != other.GetChannelRequest) return false;
      if (!object.Equals(GetChannelResponse, other.GetChannelResponse)) return false;
      if (GetOwnerRequest != other.GetOwnerRequest) return false;
      if (!object.Equals(GetOwnerResponse, other.GetOwnerResponse)) return false;
      if (GetConfigRequest != other.GetConfigRequest) return false;
      if (!object.Equals(GetConfigResponse, other.GetConfigResponse)) return false;
      if (GetModuleConfigRequest != other.GetModuleConfigRequest) return false;
      if (!object.Equals(GetModuleConfigResponse, other.GetModuleConfigResponse)) return false;
      if (GetCannedMessageModuleMessagesRequest != other.GetCannedMessageModuleMessagesRequest) return false;
      if (GetCannedMessageModuleMessagesResponse != other.GetCannedMessageModuleMessagesResponse) return false;
      if (GetDeviceMetadataRequest != other.GetDeviceMetadataRequest) return false;
      if (!object.Equals(GetDeviceMetadataResponse, other.GetDeviceMetadataResponse)) return false;
      if (GetRingtoneRequest != other.GetRingtoneRequest) return false;
      if (GetRingtoneResponse != other.GetRingtoneResponse) return false;
      if (GetDeviceConnectionStatusRequest != other.GetDeviceConnectionStatusRequest) return false;
      if (!object.Equals(GetDeviceConnectionStatusResponse, other.GetDeviceConnectionStatusResponse)) return false;
      if (!object.Equals(SetHamMode, other.SetHamMode)) return false;
      if (GetNodeRemoteHardwarePinsRequest != other.GetNodeRemoteHardwarePinsRequest) return false;
      if (!object.Equals(GetNodeRemoteHardwarePinsResponse, other.GetNodeRemoteHardwarePinsResponse)) return false;
      if (EnterDfuModeRequest != other.EnterDfuModeRequest) return false;
      if (DeleteFileRequest != other.DeleteFileRequest) return false;
      if (SetScale != other.SetScale) return false;
      if (!object.Equals(SetOwner, other.SetOwner)) return false;
      if (!object.Equals(SetChannel, other.SetChannel)) return false;
      if (!object.Equals(SetConfig, other.SetConfig)) return false;
      if (!object.Equals(SetModuleConfig, other.SetModuleConfig)) return false;
      if (SetCannedMessageModuleMessages != other.SetCannedMessageModuleMessages) return false;
      if (SetRingtoneMessage != other.SetRingtoneMessage) return false;
      if (RemoveByNodenum != other.RemoveByNodenum) return false;
      if (SetFavoriteNode != other.SetFavoriteNode) return false;
      if (RemoveFavoriteNode != other.RemoveFavoriteNode) return false;
      if (!object.Equals(SetFixedPosition, other.SetFixedPosition)) return false;
      if (RemoveFixedPosition != other.RemoveFixedPosition) return false;
      if (SetTimeOnly != other.SetTimeOnly) return false;
      if (BeginEditSettings != other.BeginEditSettings) return false;
      if (CommitEditSettings != other.CommitEditSettings) return false;
      if (FactoryResetDevice != other.FactoryResetDevice) return false;
      if (RebootOtaSeconds != other.RebootOtaSeconds) return false;
      if (ExitSimulator != other.ExitSimulator) return false;
      if (RebootSeconds != other.RebootSeconds) return false;
      if (ShutdownSeconds != other.ShutdownSeconds) return false;
      if (FactoryResetConfig != other.FactoryResetConfig) return false;
      if (NodedbReset != other.NodedbReset) return false;
      if (PayloadVariantCase != other.PayloadVariantCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionPasskey.Length != 0) hash ^= SessionPasskey.GetHashCode();
      if (HasGetChannelRequest) hash ^= GetChannelRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) hash ^= GetChannelResponse.GetHashCode();
      if (HasGetOwnerRequest) hash ^= GetOwnerRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) hash ^= GetOwnerResponse.GetHashCode();
      if (HasGetConfigRequest) hash ^= GetConfigRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) hash ^= GetConfigResponse.GetHashCode();
      if (HasGetModuleConfigRequest) hash ^= GetModuleConfigRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) hash ^= GetModuleConfigResponse.GetHashCode();
      if (HasGetCannedMessageModuleMessagesRequest) hash ^= GetCannedMessageModuleMessagesRequest.GetHashCode();
      if (HasGetCannedMessageModuleMessagesResponse) hash ^= GetCannedMessageModuleMessagesResponse.GetHashCode();
      if (HasGetDeviceMetadataRequest) hash ^= GetDeviceMetadataRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) hash ^= GetDeviceMetadataResponse.GetHashCode();
      if (HasGetRingtoneRequest) hash ^= GetRingtoneRequest.GetHashCode();
      if (HasGetRingtoneResponse) hash ^= GetRingtoneResponse.GetHashCode();
      if (HasGetDeviceConnectionStatusRequest) hash ^= GetDeviceConnectionStatusRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) hash ^= GetDeviceConnectionStatusResponse.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) hash ^= SetHamMode.GetHashCode();
      if (HasGetNodeRemoteHardwarePinsRequest) hash ^= GetNodeRemoteHardwarePinsRequest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) hash ^= GetNodeRemoteHardwarePinsResponse.GetHashCode();
      if (HasEnterDfuModeRequest) hash ^= EnterDfuModeRequest.GetHashCode();
      if (HasDeleteFileRequest) hash ^= DeleteFileRequest.GetHashCode();
      if (HasSetScale) hash ^= SetScale.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) hash ^= SetOwner.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) hash ^= SetChannel.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) hash ^= SetConfig.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) hash ^= SetModuleConfig.GetHashCode();
      if (HasSetCannedMessageModuleMessages) hash ^= SetCannedMessageModuleMessages.GetHashCode();
      if (HasSetRingtoneMessage) hash ^= SetRingtoneMessage.GetHashCode();
      if (HasRemoveByNodenum) hash ^= RemoveByNodenum.GetHashCode();
      if (HasSetFavoriteNode) hash ^= SetFavoriteNode.GetHashCode();
      if (HasRemoveFavoriteNode) hash ^= RemoveFavoriteNode.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) hash ^= SetFixedPosition.GetHashCode();
      if (HasRemoveFixedPosition) hash ^= RemoveFixedPosition.GetHashCode();
      if (HasSetTimeOnly) hash ^= SetTimeOnly.GetHashCode();
      if (HasBeginEditSettings) hash ^= BeginEditSettings.GetHashCode();
      if (HasCommitEditSettings) hash ^= CommitEditSettings.GetHashCode();
      if (HasFactoryResetDevice) hash ^= FactoryResetDevice.GetHashCode();
      if (HasRebootOtaSeconds) hash ^= RebootOtaSeconds.GetHashCode();
      if (HasExitSimulator) hash ^= ExitSimulator.GetHashCode();
      if (HasRebootSeconds) hash ^= RebootSeconds.GetHashCode();
      if (HasShutdownSeconds) hash ^= ShutdownSeconds.GetHashCode();
      if (HasFactoryResetConfig) hash ^= FactoryResetConfig.GetHashCode();
      if (HasNodedbReset) hash ^= NodedbReset.GetHashCode();
      hash ^= (int) payloadVariantCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGetChannelRequest) {
        output.WriteRawTag(8);
        output.WriteUInt32(GetChannelRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(GetChannelResponse);
      }
      if (HasGetOwnerRequest) {
        output.WriteRawTag(24);
        output.WriteBool(GetOwnerRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(GetOwnerResponse);
      }
      if (HasGetConfigRequest) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GetConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(GetConfigResponse);
      }
      if (HasGetModuleConfigRequest) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GetModuleConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GetModuleConfigResponse);
      }
      if (HasGetCannedMessageModuleMessagesRequest) {
        output.WriteRawTag(80);
        output.WriteBool(GetCannedMessageModuleMessagesRequest);
      }
      if (HasGetCannedMessageModuleMessagesResponse) {
        output.WriteRawTag(90);
        output.WriteString(GetCannedMessageModuleMessagesResponse);
      }
      if (HasGetDeviceMetadataRequest) {
        output.WriteRawTag(96);
        output.WriteBool(GetDeviceMetadataRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) {
        output.WriteRawTag(106);
        output.WriteMessage(GetDeviceMetadataResponse);
      }
      if (HasGetRingtoneRequest) {
        output.WriteRawTag(112);
        output.WriteBool(GetRingtoneRequest);
      }
      if (HasGetRingtoneResponse) {
        output.WriteRawTag(122);
        output.WriteString(GetRingtoneResponse);
      }
      if (HasGetDeviceConnectionStatusRequest) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GetDeviceConnectionStatusRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetDeviceConnectionStatusResponse);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SetHamMode);
      }
      if (HasGetNodeRemoteHardwarePinsRequest) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GetNodeRemoteHardwarePinsRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetNodeRemoteHardwarePinsResponse);
      }
      if (HasEnterDfuModeRequest) {
        output.WriteRawTag(168, 1);
        output.WriteBool(EnterDfuModeRequest);
      }
      if (HasDeleteFileRequest) {
        output.WriteRawTag(178, 1);
        output.WriteString(DeleteFileRequest);
      }
      if (HasSetScale) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SetScale);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SetOwner);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(SetChannel);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(SetConfig);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(SetModuleConfig);
      }
      if (HasSetCannedMessageModuleMessages) {
        output.WriteRawTag(162, 2);
        output.WriteString(SetCannedMessageModuleMessages);
      }
      if (HasSetRingtoneMessage) {
        output.WriteRawTag(170, 2);
        output.WriteString(SetRingtoneMessage);
      }
      if (HasRemoveByNodenum) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(RemoveByNodenum);
      }
      if (HasSetFavoriteNode) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(SetFavoriteNode);
      }
      if (HasRemoveFavoriteNode) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(RemoveFavoriteNode);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(SetFixedPosition);
      }
      if (HasRemoveFixedPosition) {
        output.WriteRawTag(208, 2);
        output.WriteBool(RemoveFixedPosition);
      }
      if (HasSetTimeOnly) {
        output.WriteRawTag(221, 2);
        output.WriteFixed32(SetTimeOnly);
      }
      if (HasBeginEditSettings) {
        output.WriteRawTag(128, 4);
        output.WriteBool(BeginEditSettings);
      }
      if (HasCommitEditSettings) {
        output.WriteRawTag(136, 4);
        output.WriteBool(CommitEditSettings);
      }
      if (HasFactoryResetDevice) {
        output.WriteRawTag(240, 5);
        output.WriteInt32(FactoryResetDevice);
      }
      if (HasRebootOtaSeconds) {
        output.WriteRawTag(248, 5);
        output.WriteInt32(RebootOtaSeconds);
      }
      if (HasExitSimulator) {
        output.WriteRawTag(128, 6);
        output.WriteBool(ExitSimulator);
      }
      if (HasRebootSeconds) {
        output.WriteRawTag(136, 6);
        output.WriteInt32(RebootSeconds);
      }
      if (HasShutdownSeconds) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(ShutdownSeconds);
      }
      if (HasFactoryResetConfig) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(FactoryResetConfig);
      }
      if (HasNodedbReset) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(NodedbReset);
      }
      if (SessionPasskey.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteBytes(SessionPasskey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGetChannelRequest) {
        output.WriteRawTag(8);
        output.WriteUInt32(GetChannelRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(GetChannelResponse);
      }
      if (HasGetOwnerRequest) {
        output.WriteRawTag(24);
        output.WriteBool(GetOwnerRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(GetOwnerResponse);
      }
      if (HasGetConfigRequest) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GetConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(GetConfigResponse);
      }
      if (HasGetModuleConfigRequest) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GetModuleConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GetModuleConfigResponse);
      }
      if (HasGetCannedMessageModuleMessagesRequest) {
        output.WriteRawTag(80);
        output.WriteBool(GetCannedMessageModuleMessagesRequest);
      }
      if (HasGetCannedMessageModuleMessagesResponse) {
        output.WriteRawTag(90);
        output.WriteString(GetCannedMessageModuleMessagesResponse);
      }
      if (HasGetDeviceMetadataRequest) {
        output.WriteRawTag(96);
        output.WriteBool(GetDeviceMetadataRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) {
        output.WriteRawTag(106);
        output.WriteMessage(GetDeviceMetadataResponse);
      }
      if (HasGetRingtoneRequest) {
        output.WriteRawTag(112);
        output.WriteBool(GetRingtoneRequest);
      }
      if (HasGetRingtoneResponse) {
        output.WriteRawTag(122);
        output.WriteString(GetRingtoneResponse);
      }
      if (HasGetDeviceConnectionStatusRequest) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GetDeviceConnectionStatusRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetDeviceConnectionStatusResponse);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SetHamMode);
      }
      if (HasGetNodeRemoteHardwarePinsRequest) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GetNodeRemoteHardwarePinsRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetNodeRemoteHardwarePinsResponse);
      }
      if (HasEnterDfuModeRequest) {
        output.WriteRawTag(168, 1);
        output.WriteBool(EnterDfuModeRequest);
      }
      if (HasDeleteFileRequest) {
        output.WriteRawTag(178, 1);
        output.WriteString(DeleteFileRequest);
      }
      if (HasSetScale) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SetScale);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SetOwner);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(SetChannel);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(SetConfig);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(SetModuleConfig);
      }
      if (HasSetCannedMessageModuleMessages) {
        output.WriteRawTag(162, 2);
        output.WriteString(SetCannedMessageModuleMessages);
      }
      if (HasSetRingtoneMessage) {
        output.WriteRawTag(170, 2);
        output.WriteString(SetRingtoneMessage);
      }
      if (HasRemoveByNodenum) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(RemoveByNodenum);
      }
      if (HasSetFavoriteNode) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(SetFavoriteNode);
      }
      if (HasRemoveFavoriteNode) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(RemoveFavoriteNode);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(SetFixedPosition);
      }
      if (HasRemoveFixedPosition) {
        output.WriteRawTag(208, 2);
        output.WriteBool(RemoveFixedPosition);
      }
      if (HasSetTimeOnly) {
        output.WriteRawTag(221, 2);
        output.WriteFixed32(SetTimeOnly);
      }
      if (HasBeginEditSettings) {
        output.WriteRawTag(128, 4);
        output.WriteBool(BeginEditSettings);
      }
      if (HasCommitEditSettings) {
        output.WriteRawTag(136, 4);
        output.WriteBool(CommitEditSettings);
      }
      if (HasFactoryResetDevice) {
        output.WriteRawTag(240, 5);
        output.WriteInt32(FactoryResetDevice);
      }
      if (HasRebootOtaSeconds) {
        output.WriteRawTag(248, 5);
        output.WriteInt32(RebootOtaSeconds);
      }
      if (HasExitSimulator) {
        output.WriteRawTag(128, 6);
        output.WriteBool(ExitSimulator);
      }
      if (HasRebootSeconds) {
        output.WriteRawTag(136, 6);
        output.WriteInt32(RebootSeconds);
      }
      if (HasShutdownSeconds) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(ShutdownSeconds);
      }
      if (HasFactoryResetConfig) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(FactoryResetConfig);
      }
      if (HasNodedbReset) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(NodedbReset);
      }
      if (SessionPasskey.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteBytes(SessionPasskey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionPasskey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(SessionPasskey);
      }
      if (HasGetChannelRequest) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GetChannelRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetChannelResponse);
      }
      if (HasGetOwnerRequest) {
        size += 1 + 1;
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetOwnerResponse);
      }
      if (HasGetConfigRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GetConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetConfigResponse);
      }
      if (HasGetModuleConfigRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GetModuleConfigRequest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetModuleConfigResponse);
      }
      if (HasGetCannedMessageModuleMessagesRequest) {
        size += 1 + 1;
      }
      if (HasGetCannedMessageModuleMessagesResponse) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GetCannedMessageModuleMessagesResponse);
      }
      if (HasGetDeviceMetadataRequest) {
        size += 1 + 1;
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDeviceMetadataResponse);
      }
      if (HasGetRingtoneRequest) {
        size += 1 + 1;
      }
      if (HasGetRingtoneResponse) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GetRingtoneResponse);
      }
      if (HasGetDeviceConnectionStatusRequest) {
        size += 2 + 1;
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetDeviceConnectionStatusResponse);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetHamMode);
      }
      if (HasGetNodeRemoteHardwarePinsRequest) {
        size += 2 + 1;
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetNodeRemoteHardwarePinsResponse);
      }
      if (HasEnterDfuModeRequest) {
        size += 2 + 1;
      }
      if (HasDeleteFileRequest) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeleteFileRequest);
      }
      if (HasSetScale) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SetScale);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetOwner);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetChannel);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetConfig);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetModuleConfig);
      }
      if (HasSetCannedMessageModuleMessages) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SetCannedMessageModuleMessages);
      }
      if (HasSetRingtoneMessage) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SetRingtoneMessage);
      }
      if (HasRemoveByNodenum) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RemoveByNodenum);
      }
      if (HasSetFavoriteNode) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SetFavoriteNode);
      }
      if (HasRemoveFavoriteNode) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RemoveFavoriteNode);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetFixedPosition);
      }
      if (HasRemoveFixedPosition) {
        size += 2 + 1;
      }
      if (HasSetTimeOnly) {
        size += 2 + 4;
      }
      if (HasBeginEditSettings) {
        size += 2 + 1;
      }
      if (HasCommitEditSettings) {
        size += 2 + 1;
      }
      if (HasFactoryResetDevice) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FactoryResetDevice);
      }
      if (HasRebootOtaSeconds) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RebootOtaSeconds);
      }
      if (HasExitSimulator) {
        size += 2 + 1;
      }
      if (HasRebootSeconds) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RebootSeconds);
      }
      if (HasShutdownSeconds) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShutdownSeconds);
      }
      if (HasFactoryResetConfig) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FactoryResetConfig);
      }
      if (HasNodedbReset) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NodedbReset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AdminMessage other) {
      if (other == null) {
        return;
      }
      if (other.SessionPasskey.Length != 0) {
        SessionPasskey = other.SessionPasskey;
      }
      switch (other.PayloadVariantCase) {
        case PayloadVariantOneofCase.GetChannelRequest:
          GetChannelRequest = other.GetChannelRequest;
          break;
        case PayloadVariantOneofCase.GetChannelResponse:
          if (GetChannelResponse == null) {
            GetChannelResponse = new global::Meshtastic.Protobufs.Channel();
          }
          GetChannelResponse.MergeFrom(other.GetChannelResponse);
          break;
        case PayloadVariantOneofCase.GetOwnerRequest:
          GetOwnerRequest = other.GetOwnerRequest;
          break;
        case PayloadVariantOneofCase.GetOwnerResponse:
          if (GetOwnerResponse == null) {
            GetOwnerResponse = new global::Meshtastic.Protobufs.User();
          }
          GetOwnerResponse.MergeFrom(other.GetOwnerResponse);
          break;
        case PayloadVariantOneofCase.GetConfigRequest:
          GetConfigRequest = other.GetConfigRequest;
          break;
        case PayloadVariantOneofCase.GetConfigResponse:
          if (GetConfigResponse == null) {
            GetConfigResponse = new global::Meshtastic.Protobufs.Config();
          }
          GetConfigResponse.MergeFrom(other.GetConfigResponse);
          break;
        case PayloadVariantOneofCase.GetModuleConfigRequest:
          GetModuleConfigRequest = other.GetModuleConfigRequest;
          break;
        case PayloadVariantOneofCase.GetModuleConfigResponse:
          if (GetModuleConfigResponse == null) {
            GetModuleConfigResponse = new global::Meshtastic.Protobufs.ModuleConfig();
          }
          GetModuleConfigResponse.MergeFrom(other.GetModuleConfigResponse);
          break;
        case PayloadVariantOneofCase.GetCannedMessageModuleMessagesRequest:
          GetCannedMessageModuleMessagesRequest = other.GetCannedMessageModuleMessagesRequest;
          break;
        case PayloadVariantOneofCase.GetCannedMessageModuleMessagesResponse:
          GetCannedMessageModuleMessagesResponse = other.GetCannedMessageModuleMessagesResponse;
          break;
        case PayloadVariantOneofCase.GetDeviceMetadataRequest:
          GetDeviceMetadataRequest = other.GetDeviceMetadataRequest;
          break;
        case PayloadVariantOneofCase.GetDeviceMetadataResponse:
          if (GetDeviceMetadataResponse == null) {
            GetDeviceMetadataResponse = new global::Meshtastic.Protobufs.DeviceMetadata();
          }
          GetDeviceMetadataResponse.MergeFrom(other.GetDeviceMetadataResponse);
          break;
        case PayloadVariantOneofCase.GetRingtoneRequest:
          GetRingtoneRequest = other.GetRingtoneRequest;
          break;
        case PayloadVariantOneofCase.GetRingtoneResponse:
          GetRingtoneResponse = other.GetRingtoneResponse;
          break;
        case PayloadVariantOneofCase.GetDeviceConnectionStatusRequest:
          GetDeviceConnectionStatusRequest = other.GetDeviceConnectionStatusRequest;
          break;
        case PayloadVariantOneofCase.GetDeviceConnectionStatusResponse:
          if (GetDeviceConnectionStatusResponse == null) {
            GetDeviceConnectionStatusResponse = new global::Meshtastic.Protobufs.DeviceConnectionStatus();
          }
          GetDeviceConnectionStatusResponse.MergeFrom(other.GetDeviceConnectionStatusResponse);
          break;
        case PayloadVariantOneofCase.SetHamMode:
          if (SetHamMode == null) {
            SetHamMode = new global::Meshtastic.Protobufs.HamParameters();
          }
          SetHamMode.MergeFrom(other.SetHamMode);
          break;
        case PayloadVariantOneofCase.GetNodeRemoteHardwarePinsRequest:
          GetNodeRemoteHardwarePinsRequest = other.GetNodeRemoteHardwarePinsRequest;
          break;
        case PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse:
          if (GetNodeRemoteHardwarePinsResponse == null) {
            GetNodeRemoteHardwarePinsResponse = new global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse();
          }
          GetNodeRemoteHardwarePinsResponse.MergeFrom(other.GetNodeRemoteHardwarePinsResponse);
          break;
        case PayloadVariantOneofCase.EnterDfuModeRequest:
          EnterDfuModeRequest = other.EnterDfuModeRequest;
          break;
        case PayloadVariantOneofCase.DeleteFileRequest:
          DeleteFileRequest = other.DeleteFileRequest;
          break;
        case PayloadVariantOneofCase.SetScale:
          SetScale = other.SetScale;
          break;
        case PayloadVariantOneofCase.SetOwner:
          if (SetOwner == null) {
            SetOwner = new global::Meshtastic.Protobufs.User();
          }
          SetOwner.MergeFrom(other.SetOwner);
          break;
        case PayloadVariantOneofCase.SetChannel:
          if (SetChannel == null) {
            SetChannel = new global::Meshtastic.Protobufs.Channel();
          }
          SetChannel.MergeFrom(other.SetChannel);
          break;
        case PayloadVariantOneofCase.SetConfig:
          if (SetConfig == null) {
            SetConfig = new global::Meshtastic.Protobufs.Config();
          }
          SetConfig.MergeFrom(other.SetConfig);
          break;
        case PayloadVariantOneofCase.SetModuleConfig:
          if (SetModuleConfig == null) {
            SetModuleConfig = new global::Meshtastic.Protobufs.ModuleConfig();
          }
          SetModuleConfig.MergeFrom(other.SetModuleConfig);
          break;
        case PayloadVariantOneofCase.SetCannedMessageModuleMessages:
          SetCannedMessageModuleMessages = other.SetCannedMessageModuleMessages;
          break;
        case PayloadVariantOneofCase.SetRingtoneMessage:
          SetRingtoneMessage = other.SetRingtoneMessage;
          break;
        case PayloadVariantOneofCase.RemoveByNodenum:
          RemoveByNodenum = other.RemoveByNodenum;
          break;
        case PayloadVariantOneofCase.SetFavoriteNode:
          SetFavoriteNode = other.SetFavoriteNode;
          break;
        case PayloadVariantOneofCase.RemoveFavoriteNode:
          RemoveFavoriteNode = other.RemoveFavoriteNode;
          break;
        case PayloadVariantOneofCase.SetFixedPosition:
          if (SetFixedPosition == null) {
            SetFixedPosition = new global::Meshtastic.Protobufs.Position();
          }
          SetFixedPosition.MergeFrom(other.SetFixedPosition);
          break;
        case PayloadVariantOneofCase.RemoveFixedPosition:
          RemoveFixedPosition = other.RemoveFixedPosition;
          break;
        case PayloadVariantOneofCase.SetTimeOnly:
          SetTimeOnly = other.SetTimeOnly;
          break;
        case PayloadVariantOneofCase.BeginEditSettings:
          BeginEditSettings = other.BeginEditSettings;
          break;
        case PayloadVariantOneofCase.CommitEditSettings:
          CommitEditSettings = other.CommitEditSettings;
          break;
        case PayloadVariantOneofCase.FactoryResetDevice:
          FactoryResetDevice = other.FactoryResetDevice;
          break;
        case PayloadVariantOneofCase.RebootOtaSeconds:
          RebootOtaSeconds = other.RebootOtaSeconds;
          break;
        case PayloadVariantOneofCase.ExitSimulator:
          ExitSimulator = other.ExitSimulator;
          break;
        case PayloadVariantOneofCase.RebootSeconds:
          RebootSeconds = other.RebootSeconds;
          break;
        case PayloadVariantOneofCase.ShutdownSeconds:
          ShutdownSeconds = other.ShutdownSeconds;
          break;
        case PayloadVariantOneofCase.FactoryResetConfig:
          FactoryResetConfig = other.FactoryResetConfig;
          break;
        case PayloadVariantOneofCase.NodedbReset:
          NodedbReset = other.NodedbReset;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GetChannelRequest = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Meshtastic.Protobufs.Channel subBuilder = new global::Meshtastic.Protobufs.Channel();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) {
              subBuilder.MergeFrom(GetChannelResponse);
            }
            input.ReadMessage(subBuilder);
            GetChannelResponse = subBuilder;
            break;
          }
          case 24: {
            GetOwnerRequest = input.ReadBool();
            break;
          }
          case 34: {
            global::Meshtastic.Protobufs.User subBuilder = new global::Meshtastic.Protobufs.User();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) {
              subBuilder.MergeFrom(GetOwnerResponse);
            }
            input.ReadMessage(subBuilder);
            GetOwnerResponse = subBuilder;
            break;
          }
          case 40: {
            payloadVariant_ = input.ReadEnum();
            payloadVariantCase_ = PayloadVariantOneofCase.GetConfigRequest;
            break;
          }
          case 50: {
            global::Meshtastic.Protobufs.Config subBuilder = new global::Meshtastic.Protobufs.Config();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) {
              subBuilder.MergeFrom(GetConfigResponse);
            }
            input.ReadMessage(subBuilder);
            GetConfigResponse = subBuilder;
            break;
          }
          case 56: {
            payloadVariant_ = input.ReadEnum();
            payloadVariantCase_ = PayloadVariantOneofCase.GetModuleConfigRequest;
            break;
          }
          case 66: {
            global::Meshtastic.Protobufs.ModuleConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) {
              subBuilder.MergeFrom(GetModuleConfigResponse);
            }
            input.ReadMessage(subBuilder);
            GetModuleConfigResponse = subBuilder;
            break;
          }
          case 80: {
            GetCannedMessageModuleMessagesRequest = input.ReadBool();
            break;
          }
          case 90: {
            GetCannedMessageModuleMessagesResponse = input.ReadString();
            break;
          }
          case 96: {
            GetDeviceMetadataRequest = input.ReadBool();
            break;
          }
          case 106: {
            global::Meshtastic.Protobufs.DeviceMetadata subBuilder = new global::Meshtastic.Protobufs.DeviceMetadata();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) {
              subBuilder.MergeFrom(GetDeviceMetadataResponse);
            }
            input.ReadMessage(subBuilder);
            GetDeviceMetadataResponse = subBuilder;
            break;
          }
          case 112: {
            GetRingtoneRequest = input.ReadBool();
            break;
          }
          case 122: {
            GetRingtoneResponse = input.ReadString();
            break;
          }
          case 128: {
            GetDeviceConnectionStatusRequest = input.ReadBool();
            break;
          }
          case 138: {
            global::Meshtastic.Protobufs.DeviceConnectionStatus subBuilder = new global::Meshtastic.Protobufs.DeviceConnectionStatus();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) {
              subBuilder.MergeFrom(GetDeviceConnectionStatusResponse);
            }
            input.ReadMessage(subBuilder);
            GetDeviceConnectionStatusResponse = subBuilder;
            break;
          }
          case 146: {
            global::Meshtastic.Protobufs.HamParameters subBuilder = new global::Meshtastic.Protobufs.HamParameters();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) {
              subBuilder.MergeFrom(SetHamMode);
            }
            input.ReadMessage(subBuilder);
            SetHamMode = subBuilder;
            break;
          }
          case 152: {
            GetNodeRemoteHardwarePinsRequest = input.ReadBool();
            break;
          }
          case 162: {
            global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse subBuilder = new global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) {
              subBuilder.MergeFrom(GetNodeRemoteHardwarePinsResponse);
            }
            input.ReadMessage(subBuilder);
            GetNodeRemoteHardwarePinsResponse = subBuilder;
            break;
          }
          case 168: {
            EnterDfuModeRequest = input.ReadBool();
            break;
          }
          case 178: {
            DeleteFileRequest = input.ReadString();
            break;
          }
          case 184: {
            SetScale = input.ReadUInt32();
            break;
          }
          case 258: {
            global::Meshtastic.Protobufs.User subBuilder = new global::Meshtastic.Protobufs.User();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) {
              subBuilder.MergeFrom(SetOwner);
            }
            input.ReadMessage(subBuilder);
            SetOwner = subBuilder;
            break;
          }
          case 266: {
            global::Meshtastic.Protobufs.Channel subBuilder = new global::Meshtastic.Protobufs.Channel();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) {
              subBuilder.MergeFrom(SetChannel);
            }
            input.ReadMessage(subBuilder);
            SetChannel = subBuilder;
            break;
          }
          case 274: {
            global::Meshtastic.Protobufs.Config subBuilder = new global::Meshtastic.Protobufs.Config();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) {
              subBuilder.MergeFrom(SetConfig);
            }
            input.ReadMessage(subBuilder);
            SetConfig = subBuilder;
            break;
          }
          case 282: {
            global::Meshtastic.Protobufs.ModuleConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) {
              subBuilder.MergeFrom(SetModuleConfig);
            }
            input.ReadMessage(subBuilder);
            SetModuleConfig = subBuilder;
            break;
          }
          case 290: {
            SetCannedMessageModuleMessages = input.ReadString();
            break;
          }
          case 298: {
            SetRingtoneMessage = input.ReadString();
            break;
          }
          case 304: {
            RemoveByNodenum = input.ReadUInt32();
            break;
          }
          case 312: {
            SetFavoriteNode = input.ReadUInt32();
            break;
          }
          case 320: {
            RemoveFavoriteNode = input.ReadUInt32();
            break;
          }
          case 330: {
            global::Meshtastic.Protobufs.Position subBuilder = new global::Meshtastic.Protobufs.Position();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) {
              subBuilder.MergeFrom(SetFixedPosition);
            }
            input.ReadMessage(subBuilder);
            SetFixedPosition = subBuilder;
            break;
          }
          case 336: {
            RemoveFixedPosition = input.ReadBool();
            break;
          }
          case 349: {
            SetTimeOnly = input.ReadFixed32();
            break;
          }
          case 512: {
            BeginEditSettings = input.ReadBool();
            break;
          }
          case 520: {
            CommitEditSettings = input.ReadBool();
            break;
          }
          case 752: {
            FactoryResetDevice = input.ReadInt32();
            break;
          }
          case 760: {
            RebootOtaSeconds = input.ReadInt32();
            break;
          }
          case 768: {
            ExitSimulator = input.ReadBool();
            break;
          }
          case 776: {
            RebootSeconds = input.ReadInt32();
            break;
          }
          case 784: {
            ShutdownSeconds = input.ReadInt32();
            break;
          }
          case 792: {
            FactoryResetConfig = input.ReadInt32();
            break;
          }
          case 800: {
            NodedbReset = input.ReadInt32();
            break;
          }
          case 810: {
            SessionPasskey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GetChannelRequest = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Meshtastic.Protobufs.Channel subBuilder = new global::Meshtastic.Protobufs.Channel();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetChannelResponse) {
              subBuilder.MergeFrom(GetChannelResponse);
            }
            input.ReadMessage(subBuilder);
            GetChannelResponse = subBuilder;
            break;
          }
          case 24: {
            GetOwnerRequest = input.ReadBool();
            break;
          }
          case 34: {
            global::Meshtastic.Protobufs.User subBuilder = new global::Meshtastic.Protobufs.User();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetOwnerResponse) {
              subBuilder.MergeFrom(GetOwnerResponse);
            }
            input.ReadMessage(subBuilder);
            GetOwnerResponse = subBuilder;
            break;
          }
          case 40: {
            payloadVariant_ = input.ReadEnum();
            payloadVariantCase_ = PayloadVariantOneofCase.GetConfigRequest;
            break;
          }
          case 50: {
            global::Meshtastic.Protobufs.Config subBuilder = new global::Meshtastic.Protobufs.Config();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetConfigResponse) {
              subBuilder.MergeFrom(GetConfigResponse);
            }
            input.ReadMessage(subBuilder);
            GetConfigResponse = subBuilder;
            break;
          }
          case 56: {
            payloadVariant_ = input.ReadEnum();
            payloadVariantCase_ = PayloadVariantOneofCase.GetModuleConfigRequest;
            break;
          }
          case 66: {
            global::Meshtastic.Protobufs.ModuleConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetModuleConfigResponse) {
              subBuilder.MergeFrom(GetModuleConfigResponse);
            }
            input.ReadMessage(subBuilder);
            GetModuleConfigResponse = subBuilder;
            break;
          }
          case 80: {
            GetCannedMessageModuleMessagesRequest = input.ReadBool();
            break;
          }
          case 90: {
            GetCannedMessageModuleMessagesResponse = input.ReadString();
            break;
          }
          case 96: {
            GetDeviceMetadataRequest = input.ReadBool();
            break;
          }
          case 106: {
            global::Meshtastic.Protobufs.DeviceMetadata subBuilder = new global::Meshtastic.Protobufs.DeviceMetadata();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceMetadataResponse) {
              subBuilder.MergeFrom(GetDeviceMetadataResponse);
            }
            input.ReadMessage(subBuilder);
            GetDeviceMetadataResponse = subBuilder;
            break;
          }
          case 112: {
            GetRingtoneRequest = input.ReadBool();
            break;
          }
          case 122: {
            GetRingtoneResponse = input.ReadString();
            break;
          }
          case 128: {
            GetDeviceConnectionStatusRequest = input.ReadBool();
            break;
          }
          case 138: {
            global::Meshtastic.Protobufs.DeviceConnectionStatus subBuilder = new global::Meshtastic.Protobufs.DeviceConnectionStatus();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetDeviceConnectionStatusResponse) {
              subBuilder.MergeFrom(GetDeviceConnectionStatusResponse);
            }
            input.ReadMessage(subBuilder);
            GetDeviceConnectionStatusResponse = subBuilder;
            break;
          }
          case 146: {
            global::Meshtastic.Protobufs.HamParameters subBuilder = new global::Meshtastic.Protobufs.HamParameters();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetHamMode) {
              subBuilder.MergeFrom(SetHamMode);
            }
            input.ReadMessage(subBuilder);
            SetHamMode = subBuilder;
            break;
          }
          case 152: {
            GetNodeRemoteHardwarePinsRequest = input.ReadBool();
            break;
          }
          case 162: {
            global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse subBuilder = new global::Meshtastic.Protobufs.NodeRemoteHardwarePinsResponse();
            if (payloadVariantCase_ == PayloadVariantOneofCase.GetNodeRemoteHardwarePinsResponse) {
              subBuilder.MergeFrom(GetNodeRemoteHardwarePinsResponse);
            }
            input.ReadMessage(subBuilder);
            GetNodeRemoteHardwarePinsResponse = subBuilder;
            break;
          }
          case 168: {
            EnterDfuModeRequest = input.ReadBool();
            break;
          }
          case 178: {
            DeleteFileRequest = input.ReadString();
            break;
          }
          case 184: {
            SetScale = input.ReadUInt32();
            break;
          }
          case 258: {
            global::Meshtastic.Protobufs.User subBuilder = new global::Meshtastic.Protobufs.User();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetOwner) {
              subBuilder.MergeFrom(SetOwner);
            }
            input.ReadMessage(subBuilder);
            SetOwner = subBuilder;
            break;
          }
          case 266: {
            global::Meshtastic.Protobufs.Channel subBuilder = new global::Meshtastic.Protobufs.Channel();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetChannel) {
              subBuilder.MergeFrom(SetChannel);
            }
            input.ReadMessage(subBuilder);
            SetChannel = subBuilder;
            break;
          }
          case 274: {
            global::Meshtastic.Protobufs.Config subBuilder = new global::Meshtastic.Protobufs.Config();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetConfig) {
              subBuilder.MergeFrom(SetConfig);
            }
            input.ReadMessage(subBuilder);
            SetConfig = subBuilder;
            break;
          }
          case 282: {
            global::Meshtastic.Protobufs.ModuleConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetModuleConfig) {
              subBuilder.MergeFrom(SetModuleConfig);
            }
            input.ReadMessage(subBuilder);
            SetModuleConfig = subBuilder;
            break;
          }
          case 290: {
            SetCannedMessageModuleMessages = input.ReadString();
            break;
          }
          case 298: {
            SetRingtoneMessage = input.ReadString();
            break;
          }
          case 304: {
            RemoveByNodenum = input.ReadUInt32();
            break;
          }
          case 312: {
            SetFavoriteNode = input.ReadUInt32();
            break;
          }
          case 320: {
            RemoveFavoriteNode = input.ReadUInt32();
            break;
          }
          case 330: {
            global::Meshtastic.Protobufs.Position subBuilder = new global::Meshtastic.Protobufs.Position();
            if (payloadVariantCase_ == PayloadVariantOneofCase.SetFixedPosition) {
              subBuilder.MergeFrom(SetFixedPosition);
            }
            input.ReadMessage(subBuilder);
            SetFixedPosition = subBuilder;
            break;
          }
          case 336: {
            RemoveFixedPosition = input.ReadBool();
            break;
          }
          case 349: {
            SetTimeOnly = input.ReadFixed32();
            break;
          }
          case 512: {
            BeginEditSettings = input.ReadBool();
            break;
          }
          case 520: {
            CommitEditSettings = input.ReadBool();
            break;
          }
          case 752: {
            FactoryResetDevice = input.ReadInt32();
            break;
          }
          case 760: {
            RebootOtaSeconds = input.ReadInt32();
            break;
          }
          case 768: {
            ExitSimulator = input.ReadBool();
            break;
          }
          case 776: {
            RebootSeconds = input.ReadInt32();
            break;
          }
          case 784: {
            ShutdownSeconds = input.ReadInt32();
            break;
          }
          case 792: {
            FactoryResetConfig = input.ReadInt32();
            break;
          }
          case 800: {
            NodedbReset = input.ReadInt32();
            break;
          }
          case 810: {
            SessionPasskey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AdminMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      ///
      /// TODO: REPLACE
      /// </summary>
      public enum ConfigType {
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("DEVICE_CONFIG")] DeviceConfig = 0,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("POSITION_CONFIG")] PositionConfig = 1,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("POWER_CONFIG")] PowerConfig = 2,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("NETWORK_CONFIG")] NetworkConfig = 3,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("DISPLAY_CONFIG")] DisplayConfig = 4,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("LORA_CONFIG")] LoraConfig = 5,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("BLUETOOTH_CONFIG")] BluetoothConfig = 6,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("SECURITY_CONFIG")] SecurityConfig = 7,
        /// <summary>
        /// </summary>
        [pbr::OriginalName("SESSIONKEY_CONFIG")] SessionkeyConfig = 8,
      }

      /// <summary>
      ///
      /// TODO: REPLACE
      /// </summary>
      public enum ModuleConfigType {
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("MQTT_CONFIG")] MqttConfig = 0,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("SERIAL_CONFIG")] SerialConfig = 1,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("EXTNOTIF_CONFIG")] ExtnotifConfig = 2,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("STOREFORWARD_CONFIG")] StoreforwardConfig = 3,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("RANGETEST_CONFIG")] RangetestConfig = 4,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("TELEMETRY_CONFIG")] TelemetryConfig = 5,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("CANNEDMSG_CONFIG")] CannedmsgConfig = 6,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("AUDIO_CONFIG")] AudioConfig = 7,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("REMOTEHARDWARE_CONFIG")] RemotehardwareConfig = 8,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("NEIGHBORINFO_CONFIG")] NeighborinfoConfig = 9,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("AMBIENTLIGHTING_CONFIG")] AmbientlightingConfig = 10,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("DETECTIONSENSOR_CONFIG")] DetectionsensorConfig = 11,
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [pbr::OriginalName("PAXCOUNTER_CONFIG")] PaxcounterConfig = 12,
      }

    }
    #endregion

  }

  /// <summary>
  ///
  /// Parameters for setting up Meshtastic for ameteur radio usage
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HamParameters : pb::IMessage<HamParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HamParameters> _parser = new pb::MessageParser<HamParameters>(() => new HamParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HamParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.AdminReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HamParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HamParameters(HamParameters other) : this() {
      callSign_ = other.callSign_;
      txPower_ = other.txPower_;
      frequency_ = other.frequency_;
      shortName_ = other.shortName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HamParameters Clone() {
      return new HamParameters(this);
    }

    /// <summary>Field number for the "call_sign" field.</summary>
    public const int CallSignFieldNumber = 1;
    private string callSign_ = "";
    /// <summary>
    ///
    /// Amateur radio call sign, eg. KD2ABC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CallSign {
      get { return callSign_; }
      set {
        callSign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_power" field.</summary>
    public const int TxPowerFieldNumber = 2;
    private int txPower_;
    /// <summary>
    ///
    /// Transmit power in dBm at the LoRA transceiver, not including any amplification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TxPower {
      get { return txPower_; }
      set {
        txPower_ = value;
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 3;
    private float frequency_;
    /// <summary>
    ///
    /// The selected frequency of LoRA operation
    /// Please respect your local laws, regulations, and band plans.
    /// Ensure your radio is capable of operating of the selected frequency before setting this.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    /// <summary>Field number for the "short_name" field.</summary>
    public const int ShortNameFieldNumber = 4;
    private string shortName_ = "";
    /// <summary>
    ///
    /// Optional short name of user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortName {
      get { return shortName_; }
      set {
        shortName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HamParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HamParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallSign != other.CallSign) return false;
      if (TxPower != other.TxPower) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Frequency, other.Frequency)) return false;
      if (ShortName != other.ShortName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CallSign.Length != 0) hash ^= CallSign.GetHashCode();
      if (TxPower != 0) hash ^= TxPower.GetHashCode();
      if (Frequency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Frequency);
      if (ShortName.Length != 0) hash ^= ShortName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CallSign.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallSign);
      }
      if (TxPower != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TxPower);
      }
      if (Frequency != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Frequency);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShortName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CallSign.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallSign);
      }
      if (TxPower != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TxPower);
      }
      if (Frequency != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Frequency);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShortName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CallSign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallSign);
      }
      if (TxPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TxPower);
      }
      if (Frequency != 0F) {
        size += 1 + 4;
      }
      if (ShortName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HamParameters other) {
      if (other == null) {
        return;
      }
      if (other.CallSign.Length != 0) {
        CallSign = other.CallSign;
      }
      if (other.TxPower != 0) {
        TxPower = other.TxPower;
      }
      if (other.Frequency != 0F) {
        Frequency = other.Frequency;
      }
      if (other.ShortName.Length != 0) {
        ShortName = other.ShortName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CallSign = input.ReadString();
            break;
          }
          case 16: {
            TxPower = input.ReadInt32();
            break;
          }
          case 29: {
            Frequency = input.ReadFloat();
            break;
          }
          case 34: {
            ShortName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CallSign = input.ReadString();
            break;
          }
          case 16: {
            TxPower = input.ReadInt32();
            break;
          }
          case 29: {
            Frequency = input.ReadFloat();
            break;
          }
          case 34: {
            ShortName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Response envelope for node_remote_hardware_pins
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NodeRemoteHardwarePinsResponse : pb::IMessage<NodeRemoteHardwarePinsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeRemoteHardwarePinsResponse> _parser = new pb::MessageParser<NodeRemoteHardwarePinsResponse>(() => new NodeRemoteHardwarePinsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeRemoteHardwarePinsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.AdminReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRemoteHardwarePinsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRemoteHardwarePinsResponse(NodeRemoteHardwarePinsResponse other) : this() {
      nodeRemoteHardwarePins_ = other.nodeRemoteHardwarePins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRemoteHardwarePinsResponse Clone() {
      return new NodeRemoteHardwarePinsResponse(this);
    }

    /// <summary>Field number for the "node_remote_hardware_pins" field.</summary>
    public const int NodeRemoteHardwarePinsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Meshtastic.Protobufs.NodeRemoteHardwarePin> _repeated_nodeRemoteHardwarePins_codec
        = pb::FieldCodec.ForMessage(10, global::Meshtastic.Protobufs.NodeRemoteHardwarePin.Parser);
    private readonly pbc::RepeatedField<global::Meshtastic.Protobufs.NodeRemoteHardwarePin> nodeRemoteHardwarePins_ = new pbc::RepeatedField<global::Meshtastic.Protobufs.NodeRemoteHardwarePin>();
    /// <summary>
    ///
    /// Nodes and their respective remote hardware GPIO pins
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Meshtastic.Protobufs.NodeRemoteHardwarePin> NodeRemoteHardwarePins {
      get { return nodeRemoteHardwarePins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeRemoteHardwarePinsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeRemoteHardwarePinsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodeRemoteHardwarePins_.Equals(other.nodeRemoteHardwarePins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodeRemoteHardwarePins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nodeRemoteHardwarePins_.WriteTo(output, _repeated_nodeRemoteHardwarePins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nodeRemoteHardwarePins_.WriteTo(ref output, _repeated_nodeRemoteHardwarePins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nodeRemoteHardwarePins_.CalculateSize(_repeated_nodeRemoteHardwarePins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeRemoteHardwarePinsResponse other) {
      if (other == null) {
        return;
      }
      nodeRemoteHardwarePins_.Add(other.nodeRemoteHardwarePins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodeRemoteHardwarePins_.AddEntriesFrom(input, _repeated_nodeRemoteHardwarePins_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nodeRemoteHardwarePins_.AddEntriesFrom(ref input, _repeated_nodeRemoteHardwarePins_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
